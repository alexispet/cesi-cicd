name: CI/CD

run-name: ${{ github.actor }} is running CI/CD

on: [push]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/next
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/Cypress
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - run: npm install
      - run: npm run build

  test:
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: ["chrome", "edge"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache/restore@v3
        with:
          path: |
            ~/.cache/Cypress
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          install: false
          build: npm run build
          start: npm start
          browser: ${{ matrix.browser }}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Cypress videos for ${{ matrix.browser }}
          path: cypress/videos

  deploy-production:
    needs: [build-and-push-image]
    if: github.ref_type == 'tag'
    environment: 
      name: production
      url: ${{ secrets.SSH_HOST }}
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}
      - run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
          cd prod && \
          sudo docker compose -f docker-compose.prod.yml up --pull always -d"

  deploy-development:
    needs: [build-and-push-image]
    if: github.ref_name == 'develop'
    environment: 
      name: production
      url: http://15.237.40.167:3000
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}
      - run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
          cd dev && \
          sudo docker compose -f docker-compose.dev.yml up --pull always -d"
